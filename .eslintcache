[{"D:\\git\\LangLearning-Frontend\\src\\reportWebVitals.js":"1","D:\\git\\LangLearning-Frontend\\src\\Testbutton.js":"2","D:\\git\\LangLearning-Frontend\\src\\App.js":"3","D:\\git\\LangLearning-Frontend\\src\\pages\\SentencesByWord.js":"4","D:\\git\\LangLearning-Frontend\\src\\index.js":"5","D:\\git\\LangLearning-Frontend\\src\\pages\\RandomSentences.js":"6","D:\\git\\LangLearning-Frontend\\src\\pages\\SendEmail.js":"7","D:\\git\\LangLearning-Frontend\\src\\pages\\Home.js":"8","D:\\git\\LangLearning-Frontend\\src\\pages\\NavBarAndSearchSentence.js":"9","D:\\git\\LangLearning-Frontend\\src\\pages\\Footer.js":"10"},{"size":375,"mtime":1609850253605,"results":"11","hashOfConfig":"12"},{"size":214,"mtime":1609850253602,"results":"13","hashOfConfig":"12"},{"size":2196,"mtime":1612371345759,"results":"14","hashOfConfig":"12"},{"size":1362,"mtime":1610930983626,"results":"15","hashOfConfig":"12"},{"size":491,"mtime":1609850253604,"results":"16","hashOfConfig":"12"},{"size":3371,"mtime":1612726664089,"results":"17","hashOfConfig":"12"},{"size":850,"mtime":1610933802618,"results":"18","hashOfConfig":"12"},{"size":28917,"mtime":1612711633327,"results":"19","hashOfConfig":"12"},{"size":4235,"mtime":1612639500148,"results":"20","hashOfConfig":"12"},{"size":3819,"mtime":1612639117289,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"s0jf5r",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},"D:\\git\\LangLearning-Frontend\\src\\reportWebVitals.js",[],["52","53"],"D:\\git\\LangLearning-Frontend\\src\\Testbutton.js",[],"D:\\git\\LangLearning-Frontend\\src\\App.js",["54"],"import './App.css';\r\n\r\nimport { useState, useEffect, Fragment } from 'react';\r\n\r\nimport NavbarFunction, {\r\n    NavBarSearchSentences,\r\n} from './pages/NavBarAndSearchSentence';\r\nimport ShowSentenceByWord from '../src/pages/SentencesByWord';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport ShowRandomSentences from './pages/RandomSentences';\r\nimport SendEmail from './pages/SendEmail';\r\nimport HomePage from '../src/pages/Home';\r\nimport Footer from '../src/pages/Footer';\r\n\r\nfunction App(props) {\r\n    const [fetchu, setFetchu] = useState('');\r\n    const [cantFind, setCantFind] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (fetchu) {\r\n            setFetchu('');\r\n        }\r\n    }, [cantFind]);\r\n\r\n    return (\r\n        // <div>\r\n        //     <MyControlledInput />\r\n        //     <HomePage />\r\n        // </div>\r\n\r\n        <Router>\r\n            <div className='App'>\r\n                <NavbarFunction\r\n                    setFetchuu={setFetchu}\r\n                    setCantFindd={setCantFind}\r\n                    fetchu={fetchu}\r\n                />\r\n\r\n                <Route exact path='/'>\r\n                    <Redirect to='/Home' />{' '}\r\n                </Route>\r\n\r\n                <Route\r\n                    path='/SearchByWord'\r\n                    component={ShowSentenceByWord}\r\n                    exact\r\n                />\r\n                <Route\r\n                    path='/GiveMeSentences'\r\n                    component={ShowRandomSentences}\r\n                    exact\r\n                />\r\n                <Route path='/SendEmail' component={SendEmail} exact />\r\n                <Route\r\n                    path='/Home'\r\n                    render={(props) => (\r\n                        <Fragment>\r\n                            <HomePage />\r\n                            <NavBarSearchSentences\r\n                                fetchu={fetchu}\r\n                                cantFind={cantFind}\r\n                            />\r\n                        </Fragment>\r\n                    )}\r\n                    exact\r\n                />\r\n                <Footer />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\nexport default App;\r\n","D:\\git\\LangLearning-Frontend\\src\\pages\\SentencesByWord.js",["55"],"import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nfunction ShowSentenceByWord() {\r\n    const [sentence, setSentence] = useState('');\r\n    const [fetchu, setFetchu] = useState('');\r\n\r\n    const FetchData = () => {\r\n        fetch(`http://localhost:8080/words/showSentences?word=` + sentence)\r\n            .then((response) => response.json())\r\n            .then(setFetchu)\r\n            .then(console.log(fetchu));\r\n    };\r\n\r\n    const OnChangerr = (e) => {\r\n        setSentence(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input type='text' name='name' onChange={OnChangerr} />\r\n            <button\r\n                type='submit'\r\n                value={sentence}\r\n                name='text'\r\n                onClick={FetchData}>\r\n                Click to search for sentences\r\n            </button>\r\n\r\n            {fetchu ? (\r\n                <>\r\n                    <h1> {fetchu.korfirstSentence} </h1>\r\n                    <h1>{fetchu.kosecondSentence}</h1>\r\n                    <h1>{fetchu.kothirdSentence}</h1>\r\n                    <h1>{fetchu.kowordTranslation}</h1>\r\n                    <h1>{fetchu.kowordId}</h1>\r\n                </>\r\n            ) : (\r\n                // <h1> {fetchu.kosecondSentence}  </h1>\r\n\r\n                <h1></h1>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShowSentenceByWord;\r\n",["56","57"],"D:\\git\\LangLearning-Frontend\\src\\index.js",["58"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App test={true} />,\r\n\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["59","60"],"D:\\git\\LangLearning-Frontend\\src\\pages\\RandomSentences.js",["61","62","63","64","65","66","67","68","69","70","71"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport '../../src/Ceseseu2.css';\r\nimport koreanLang from '../imagesRandomSentence/koreanLang.png';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarBrand,\r\n    MDBNavbarNav,\r\n    MDBNavItem,\r\n    MDBNavLink,\r\n    MDBNavbarToggler,\r\n    MDBCollapse,\r\n    MDBMask,\r\n    MDBRow,\r\n    MDBCol,\r\n    MDBBtn,\r\n    MDBView,\r\n    MDBContainer,\r\n    MDBFormInline,\r\n    MDBAnimation,\r\n} from 'mdbreact';\r\nimport KoreanFlag from '../imagesRandomSentence/koreanFlag.jpg';\r\n\r\nfunction ShowRandomSentences() {\r\n    const [fethData, setfetchData] = useState('');\r\n    const FetchIt = () => {\r\n        fetch('http://localhost:8080/words/randomSentenceBeginner')\r\n            .then((response) => response.json())\r\n            .then(setfetchData)\r\n            .then(console.log(fethData));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='bg' />\r\n            <div className='buttonRandomS'>Random</div>\r\n\r\n            <div id='apppage'>\r\n                <MDBView className=''>\r\n                    <MDBMask className='d-flex justify-content-center align-items-center gradient '>\r\n                        <MDBContainer className='ChangePotitionText'>\r\n                            <MDBRow>\r\n                                <MDBCol\r\n                                    md='6'\r\n                                    className='white-text text-center text-md-left mt-xl-5 mb-5'>\r\n                                    <MDBAnimation type='fadeInLeft' delay='.3s'>\r\n                                        <h1 className='h1-responsive font-weight-bold mt-sm-5 onPhotoText'>\r\n                                            Scroll down and start to learn\r\n                                            something new!\r\n                                        </h1>\r\n                                        <hr className='hr-light' />\r\n                                        <h6 className='mb-4 onPhotoText'>\r\n                                            If you feel like some words are\r\n                                            missing, please do not hesitate to\r\n                                            use feedback section\r\n                                        </h6>\r\n                                    </MDBAnimation>\r\n                                </MDBCol>\r\n\r\n                                <MDBCol md='6' xl='5' className='mt-xl-5'>\r\n                                    <MDBAnimation\r\n                                        type='fadeInRight'\r\n                                        delay='.3s'></MDBAnimation>\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </MDBContainer>\r\n                    </MDBMask>\r\n                </MDBView>\r\n            </div>\r\n\r\n            <button className='buttonRandomS' onClick={FetchIt}>\r\n                Click meS\r\n            </button>\r\n\r\n            {fethData ? (\r\n                <div>\r\n                    <h1>{fethData.kothirdSentence}</h1>\r\n                    <h1>{fethData.kowordTranslation}</h1>\r\n                    <h1>{fethData.koword}</h1>\r\n                    <h1>{fethData.korfirstSentence}</h1>\r\n                    <h1>{fethData.korfirstSentence}</h1>\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShowRandomSentences;\r\n","D:\\git\\LangLearning-Frontend\\src\\pages\\SendEmail.js",[],"D:\\git\\LangLearning-Frontend\\src\\pages\\Home.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport pozika from '../images/telescop.png';\r\nimport '../../src/Ceseseu.css';\r\nimport pozika2 from '../images/door.png';\r\nimport pozika3 from '../images/threeword.png';\r\nimport pozaAbout from '../images/learnkorean.jpg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport NavbarFunction from '../pages/NavBarAndSearchSentence';\r\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useState, useEffect, Fragment } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport meme1 from '../images/meme1.png';\r\nimport meme2 from '../images/meme2c.jpg';\r\nimport meme3 from '../images/meme3c.jpg';\r\nimport Typing from 'react-typing-animation';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction TEST() {\r\n    let a = 4;\r\n    return (\r\n        <>\r\n            <p className='testcesese'>TEST {a} </p>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction HomePageSlideShow() {\r\n    return (\r\n        <>\r\n            <div className='slideShow '>\r\n                <Carousel>\r\n                    {/* <div className='letsDoIt'> */}\r\n                    <Carousel.Item interval={1000}>\r\n                        <img\r\n                            className='d-block w-100'\r\n                            width={900}\r\n                            height={500}\r\n                            src={pozika}\r\n                            alt='First slide'\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3></h3>\r\n                            <p></p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    {/* </div> */}\r\n                    <Carousel.Item interval={1000}>\r\n                        <img\r\n                            className='d-block w-100 '\r\n                            src={pozika2}\r\n                            alt='Third slide'\r\n                            width={100}\r\n                            height={500}\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3></h3>\r\n                            <p></p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item interval={1000}>\r\n                        <img\r\n                            className='d-block w-100'\r\n                            src={pozika3}\r\n                            alt='Third slide'\r\n                            width={900}\r\n                            height={500}\r\n                        />\r\n                        <Carousel.Caption>\r\n                            <h3></h3>\r\n                            <p></p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction AboutThisWebsite() {\r\n    return (\r\n        <>\r\n            <section id='about' className='about border border-white'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-lg-6' data-aos='zoom-in'>\r\n                            <img src={pozaAbout} className='img-fluid' alt='' />\r\n                        </div>\r\n                        <div\r\n                            className='col-lg-6 d-flex flex-column justify-contents-center'\r\n                            data-aos='fade-left'>\r\n                            <div className='content pt-4 pt-lg-0'>\r\n                                <h3>For what you can use this website?</h3>\r\n                                <p className='font-italic'>\r\n                                    We just hope that we can help korean\r\n                                    learners to learn vocabulary so please feel\r\n                                    free to use it if you:\r\n                                </p>\r\n                                <ul>\r\n                                    <li>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faCheckSquare}\r\n                                            color='green'\r\n                                        />\r\n                                        <i></i>\r\n                                        <i></i>\r\n                                        Are tired to learn new words from books\r\n                                        and dictionary\r\n                                    </li>\r\n                                    <li>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faCheckSquare}\r\n                                            color='green'\r\n                                        />\r\n                                        <i></i>\r\n                                        <i></i> Wanna get some vocabulary (and\r\n                                        not just vocabulary) knowledges in a\r\n                                        funny way\r\n                                    </li>\r\n                                    <li>\r\n                                        <FontAwesomeIcon\r\n                                            icon={faCheckSquare}\r\n                                            color='green'\r\n                                        />\r\n                                        <i className='icofont-check-circled'></i>\r\n                                        {'    '}\r\n                                        aici tre sa revin\r\n                                    </li>\r\n                                </ul>\r\n                                <p>aici trebe sa revin</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction DontKnowWhatToLearn() {\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    function simulateNetworkRequest() {\r\n        return new Promise((resolve) => setTimeout(resolve, 1000));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            simulateNetworkRequest().then(() => {\r\n                setLoading(false);\r\n                window.location.href = '/GiveMeSentences';\r\n            });\r\n        }\r\n    }, [isLoading]);\r\n    const handleClick = () => setLoading(true);\r\n\r\n    return (\r\n        <>\r\n            <div className='AboutFirst'>\r\n                <div className='AboutFirstText'>\r\n                    <div className='AboutFirstTextFirstThing'>\r\n                        Want to learn but don't know what?\r\n                    </div>\r\n                    <div className='AboutFirstTextSecondThing'>\r\n                        We also have random words generator :)\r\n                    </div>\r\n                    <div></div>\r\n                    <div className='AboutFirstTextThirdThing'>\r\n                        한국어 공부하면 새 문을 닫을 수도 있어요\r\n                    </div>\r\n                </div>\r\n                <Button\r\n                    variant='warning'\r\n                    className='ButtonRedirectRandom'\r\n                    size='lg'\r\n                    onClick={!isLoading ? handleClick : null}>\r\n                    {isLoading\r\n                        ? 'We will redirect you..'\r\n                        : 'Let s learn smth new'}\r\n                </Button>{' '}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction FlipCard() {\r\n    const [isFlipped, setisFlipped] = useState(false);\r\n    const [isFlippedSecond, setIsFlippedSecond] = useState(false);\r\n    const [isFlippedThird, setisFlippedThird] = useState(false);\r\n    const [isFlippedFour, setisFlippedFour] = useState(false);\r\n    const [test, setTest] = useState(false);\r\n\r\n    function cardFlip() {\r\n        setisFlipped(!isFlipped);\r\n        setIsFlippedSecond(!isFlippedSecond);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id='AllCards'>\r\n                <div className='card FirstCards'>\r\n                    <div className='front frontCard frontCardFirst'>\r\n                        <div className='FirstCardsFrontText'>\r\n                            Don't feel any improvement?\r\n                        </div>\r\n                        <div>\r\n                            {' '}\r\n                            이거 이해할 수 있으면 한국어 잘 할 수 있은가 봐요\r\n                        </div>\r\n                    </div>\r\n                    <div className='back  backCard backCardFirst'>\r\n                        <div>\r\n                            Don't worry, it's something normal that came when\r\n                            you start to learn something new, give yourself\r\n                            time, even a caterpillar need time until it change\r\n                            into a butterfly and start to fly\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='card  SecondCards'>\r\n                    <div className='front  frontCard frontCardSecond'>\r\n                        <div className='FirstCardsFrontText'>\r\n                            You feel you don't have any motivation?\r\n                        </div>\r\n                        <div> 공부하면서 동기가 올 거예요.</div>\r\n                    </div>\r\n                    <div className='back  backCard backCardSecond'>\r\n                        <div>\r\n                            It's ok to feel this, usually every normal learning\r\n                            process came with some moments when you feel like\r\n                            \"why the heck did I start this?\" just take a day off\r\n                            and think about the result that you wanna achieve\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='card  ThirdCars'>\r\n                    <div className='front  frontCard frontCardThird'>\r\n                        <div className='FirstCardsFrontText'>\r\n                            Don't know from where you can start to learn?\r\n                        </div>\r\n                        <div> 한국어 공부 시작하세요</div>\r\n                    </div>\r\n                    <div className='back  backCard backCardThird'>\r\n                        <div>\r\n                            This is very simple :) first of all you need to\r\n                            master korean alphabet, after you do that your\r\n                            journey in this language started. There are a lot of\r\n                            learning resources and youtube videoes, good luck!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='card  FourCard '>\r\n                    <div className='front  frontCard frontCardFour'>\r\n                        <div className='FirstCardsFrontText'>\r\n                            You still have some question?\r\n                        </div>\r\n                        <div> 질문이 물어봐요!</div>\r\n                    </div>\r\n                    <div className='back  backCard backCardFour '>\r\n                        <div>\r\n                            Then please don't hesitate to contact us, you can\r\n                            use \"Send us your thoughts that it's located on the\r\n                            top of the page and ask us everything or give some\r\n                            suggestions to improve our work\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id='yourAnchorTag'> </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst AnimatedTypingComponent = () => {\r\n    const [TypeEffect, setTypeEffect] = useState(false);\r\n    const [FlipMyCard, setFlipMyCard] = useState(false);\r\n    const [TypingTurn, setTypingTurn] = useState(false);\r\n    const [TypingTurnSecond, setTypingTurnSecond] = useState(false);\r\n    const [TypingTurnSecond2, setTypingTurnSecond2] = useState(false);\r\n    const [TypingTurnSecond3, setTypingTurnSecond3] = useState(false);\r\n    const [TypingTurnThid, setTypingTurnThird] = useState(false);\r\n    const [TypingTurnThid2, setTypingTurnThird2] = useState(false);\r\n    const [TypingTurnThid3, setTypingTurnThird3] = useState(false);\r\n\r\n    const TypingFirstCardExplications = () => {\r\n        setTypingTurn(!TypingTurn);\r\n    };\r\n\r\n    const TypingSecondCardExplication = () => {\r\n        setTypingTurnSecond(!TypingTurnSecond);\r\n    };\r\n\r\n    const TypingSecondCardExplication2 = () => {\r\n        setTypingTurnSecond2(!TypingTurnSecond2);\r\n    };\r\n\r\n    const TypingSecondCardExplication3 = () => {\r\n        setTypingTurnSecond3(!TypingTurnSecond3);\r\n    };\r\n\r\n    const TypingThirdCardExplication = () => {\r\n        setTypingTurnThird(!TypingTurnThid);\r\n    };\r\n    const TypingThirdCardExplication2 = () => {\r\n        setTypingTurnThird2(!TypingTurnThid2);\r\n    };\r\n    const TypingThirdCardExplication3 = () => {\r\n        setTypingTurnThird3(!TypingTurnThid3);\r\n    };\r\n\r\n    const AfterTimeEnd = () => {\r\n        const timer = setTimeout(() => {\r\n            console.log('Hello, World!');\r\n            setTypeEffect(true);\r\n        }, 5000);\r\n        return () => clearInterval(timer);\r\n    };\r\n\r\n    const SomeTest = () => {\r\n        setFlipMyCard(!FlipCard);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typing onAfterType={AfterTimeEnd} startDelay='3000'>\r\n                <div className='LikeMemes '>\r\n                    Because we know that you like memes...\r\n                </div>\r\n                <Typing.Delay ms={1000} />\r\n            </Typing>\r\n\r\n            {TypeEffect ? (\r\n                <div>\r\n                    <div class='cardMeme cardMemeFirst'>\r\n                        <div\r\n                            class='frontMemeCard'\r\n\r\n                            // onMouseOut={StartThis}>\r\n                        >\r\n                            <Card\r\n                                // border='none'\r\n                                // bg='Light'\r\n                                style={{ width: '18rem' }}>\r\n                                <Card.Img variant='top' src={meme1} />\r\n                                <Card.Body bsPrefix='STILIZAM'>\r\n                                    <Card.Title>\r\n                                        We know how you feel\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        Just give yourself time, it takes a lot\r\n                                        of time and effort to be fluent in a new\r\n                                        language\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div class='backMemeCard'>\r\n                            <div className='TitleFirstCard'>\r\n                                Glad to see your here!\r\n                            </div>\r\n                            <div className='explainCards'>\r\n                                On every meme card on the back we explain the\r\n                                korean language used in it.{' '}\r\n                            </div>\r\n                            <div className='explainCards'>\r\n                                Hope it will helps you!{' '}\r\n                            </div>\r\n                            <div\r\n                                className='koreanTextFirstCard'\r\n                                onMouseOver={TypingFirstCardExplications}\r\n                                onMouseOut={TypingFirstCardExplications}>\r\n                                화이팅!\r\n                            </div>\r\n\r\n                            {TypingTurn ? (\r\n                                <Typing startDelay='100'>\r\n                                    <div className='koreanSlang'>\r\n                                        {' '}\r\n                                        화이팅 = Korean slang, usually express\r\n                                        something similar like \"you can do it!/\r\n                                        let's do it!\"\r\n                                    </div>\r\n                                    <Typing.Delay ms={1000} />\r\n                                </Typing>\r\n                            ) : (\r\n                                <div>\r\n                                    Go to click on \"화이팅\" to see it s\r\n                                    explications!\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class='cardMeme cardMemeSecond '>\r\n                        <div class='frontMemeCard'>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Img variant='top' src={meme2} />\r\n                                <Card.Body bsPrefix='STILIZAM'>\r\n                                    <Card.Title>\r\n                                        Let's start with smth easy\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        Now flip the card if you don't\r\n                                        understand this meme\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div class='backMemeCard'>\r\n                            <div className='TitleFirstCard'>\r\n                                Some basic words\r\n                            </div>\r\n                            <div className='explainCards alignThis'>\r\n                                The words are:\r\n                            </div>\r\n                            <div className='explainCards alignThis '>\r\n                                {''}\r\n                                <div\r\n                                    className='alignThis'\r\n                                    onMouseOver={TypingThirdCardExplication}\r\n                                    onMouseOut={TypingThirdCardExplication}>\r\n                                    외국인,\r\n                                </div>{' '}\r\n                                <div\r\n                                    className='alignThis'\r\n                                    onMouseOver={TypingThirdCardExplication2}\r\n                                    onMouseOut={TypingThirdCardExplication2}>\r\n                                    한국인,\r\n                                </div>\r\n                                <div\r\n                                    className='explainCards'\r\n                                    onMouseOver={TypingThirdCardExplication3}\r\n                                    onMouseOut={TypingThirdCardExplication3}>\r\n                                    {' '}\r\n                                    안녕하세요{' '}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className='explicationTime explainWords '>\r\n                                {TypingTurnThid ? (\r\n                                    <div>\r\n                                        <Typing startDelay='100'>\r\n                                            <div className='koreanForeigner'>\r\n                                                {' '}\r\n                                                외국인 = foreigner.\r\n                                            </div>\r\n                                            <Typing.Delay ms={1000} />\r\n                                        </Typing>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div></div>\r\n                                )}\r\n\r\n                                {TypingTurnThid2 ? (\r\n                                    <div>\r\n                                        <Typing startDelay='100'>\r\n                                            <div className='koreanKoreanWord'>\r\n                                                한국인 = 한국 (Korea) + 인\r\n                                                (Person) = korean person.\r\n                                            </div>\r\n                                            <Typing.Delay ms={1000} />\r\n                                        </Typing>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div></div>\r\n                                )}\r\n                                {TypingTurnThid3 ? (\r\n                                    <div>\r\n                                        <Typing startDelay='100'>\r\n                                            <div className='koreanHiWord'>\r\n                                                안녕하세요 = Most basically\r\n                                                korean formal \"Hello\" that you\r\n                                                can hear in kdramas :)\r\n                                            </div>\r\n                                            <Typing.Delay ms={1000} />\r\n                                        </Typing>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div> </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class='cardMeme cardMemeThird '>\r\n                        <div class='frontMemeCard middleCard'>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Img variant='top' src={meme3} />\r\n                                <Card.Body bsPrefix='STILIZAM'>\r\n                                    <Card.Title>\r\n                                        Let's try a full sentence too\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        What are you waiting? flip it!\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                        <div class='backMemeCard'>\r\n                            <div className='TitleFirstCard'>\r\n                                <div>\r\n                                    I know it's a full sentence but you can do\r\n                                    it!\r\n                                </div>\r\n                                <div className='explicationTimeForMiddleMeme'>\r\n                                    <div className='explainKoreanThird'>\r\n                                        The sentence it's:{' '}\r\n                                        <div\r\n                                            className='alignThis'\r\n                                            onMouseOver={\r\n                                                TypingSecondCardExplication\r\n                                            }\r\n                                            onMouseOut={\r\n                                                TypingSecondCardExplication\r\n                                            }>\r\n                                            저도\r\n                                        </div>{' '}\r\n                                        <div\r\n                                            className='alignThis EnglishLangauge'\r\n                                            onMouseOver={\r\n                                                TypingSecondCardExplication2\r\n                                            }\r\n                                            onMouseOut={\r\n                                                TypingSecondCardExplication2\r\n                                            }>\r\n                                            {' '}\r\n                                            영어{' '}\r\n                                        </div>{' '}\r\n                                        <div\r\n                                            className='alignThis'\r\n                                            onMouseOver={\r\n                                                TypingSecondCardExplication3\r\n                                            }\r\n                                            onMouseOut={\r\n                                                TypingSecondCardExplication3\r\n                                            }>\r\n                                            못해요\r\n                                        </div>\r\n                                    </div>\r\n                                    {TypingTurnSecond ? (\r\n                                        <div>\r\n                                            <Typing startDelay='100'>\r\n                                                <div className='SomeTopSpaceBetweenWoeds thirdMemeCardMeToo'>\r\n                                                    저도 = 저 (Me) + 도 (too) =\r\n                                                    Me too{' '}\r\n                                                </div>\r\n                                                <Typing.Delay ms={1000} />\r\n                                            </Typing>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div></div>\r\n                                    )}\r\n                                    {TypingTurnSecond2 ? (\r\n                                        <div>\r\n                                            <Typing startDelay='100'>\r\n                                                <div className='SomeTopSpaceBetweenWoeds thirdMemeCardMeToo'>\r\n                                                    영어 = 영 (America) + 어\r\n                                                    (language) it means english\r\n                                                    language\r\n                                                </div>\r\n                                                <Typing.Delay ms={1000} />\r\n                                            </Typing>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div></div>\r\n                                    )}\r\n                                    {TypingTurnSecond3 ? (\r\n                                        <div>\r\n                                            <Typing startDelay='100'>\r\n                                                <div className='SomeTopSpaceBetweenWoeds thirdMemeCardMeToo'>\r\n                                                    못해 it's a grammar\r\n                                                    structure that cames from:\r\n                                                </div>\r\n                                                <Typing.Delay ms={1000} />\r\n                                            </Typing>\r\n                                            <Typing startDelay='7000'>\r\n                                                <div className='SomeTopSpaceBetweenWoeds'>\r\n                                                    못 + 하다 = to do = 못해\r\n                                                    whichs means I can't do{' '}\r\n                                                </div>\r\n                                                <Typing.Delay ms={1000} />\r\n                                            </Typing>\r\n                                            <Typing startDelay='14000'>\r\n                                                <div className='SomeTopSpaceBetweenWoeds'>\r\n                                                    Another example: 못 (Can't)\r\n                                                    + 먹다 (To eat) = 못 먹어 (I\r\n                                                    can't eat){' '}\r\n                                                </div>\r\n                                                <Typing.Delay ms={1000} />\r\n                                            </Typing>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div></div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <>\r\n            <HomePageSlideShow />\r\n            <DontKnowWhatToLearn />\r\n\r\n            <AboutThisWebsite />\r\n            <FlipCard />\r\n            <AnimatedTypingComponent />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","D:\\git\\LangLearning-Frontend\\src\\pages\\NavBarAndSearchSentence.js",["87","88","89","90"],"import React from 'react';\r\nimport SentencesByWord from './SentencesByWord';\r\nimport { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\nexport default function NavbarFunction(props) {\r\n    const [sentence, setSentence] = useState('');\r\n    // const [fetchu, setFetchu] = useState('');\r\n    // const [cantFind, setCantFind] = useState('');\r\n    let history = useHistory();\r\n\r\n    const FetchData = () => {\r\n        fetch(`http://localhost:8080/words/showSentences?word=` + sentence)\r\n            .then((response) => response.json())\r\n            .then(props.setFetchuu)\r\n            .then(console.log(props.fetchu))\r\n            .then(props.setCantFindd(''))\r\n            .then((window.location.href = '/Home#yourAnchorTag'))\r\n\r\n            .catch(function (error) {\r\n                console.log('mergi');\r\n                props.setCantFindd(\"We can't find the word in our database\");\r\n\r\n                window.location.href = '/Home#yourAnchorTag';\r\n            });\r\n        // history.push('/Home', 'yourAnchorTag');\r\n        // window.location.href = '/Home#yourAnchorTag';\r\n        // document.getElementById('yourAnchorTag').scrollIntoView();\r\n    };\r\n    const OnChangerr = (e) => {\r\n        setSentence(e.target.value);\r\n    };\r\n\r\n    const HandleKeypress = (e) => {\r\n        if (e.keyCode === 13) {\r\n            FetchData();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='inlineu'>\r\n                <Navbar bg='dark' variant='dark' fixed='top'>\r\n                    <Navbar.Brand href='Home'>LearningVocab</Navbar.Brand>\r\n                    <Nav className='mr-auto'>\r\n                        <Nav.Link href='GiveMeSentences'>\r\n                            Random Sentences\r\n                        </Nav.Link>\r\n                        <Nav.Link href='SendEmail'>\r\n                            Send us your thoughts\r\n                        </Nav.Link>\r\n                        <Nav.Link href='SearchByWord'>Pricing</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                        <FormControl\r\n                            type='text'\r\n                            placeholder='Search'\r\n                            className='mr-sm-2'\r\n                            onChange={OnChangerr}\r\n                            onKeyDown={HandleKeypress}\r\n                        />\r\n                        <Button variant='outline-info' onClick={FetchData}>\r\n                            Search\r\n                        </Button>\r\n                    </Form>\r\n                </Navbar>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction NavBarSearchSentences(props) {\r\n    return (\r\n        <>\r\n            {props.fetchu ? (\r\n                <div>\r\n                    <div className='WordsHeader'>\r\n                        <div>Korean word: {props.fetchu.koword}</div>\r\n                        <div>\r\n                            English translation:{' '}\r\n                            {props.fetchu.kowordTranslation}\r\n                        </div>\r\n                    </div>\r\n                    <div className='KoreanSentences'>\r\n                        <div>\r\n                            {' '}\r\n                            First sentence: {props.fetchu.korfirstSentence}{' '}\r\n                        </div>\r\n                        <div>\r\n                            {' '}\r\n                            Second sentence: {props.fetchu.kosecondSentence}\r\n                        </div>\r\n                        <div>\r\n                            Third sentence: {props.fetchu.kothirdSentence}\r\n                        </div>\r\n\r\n                        {/* <h1>{props.fetchu}</h1> */}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                // <h1> {fetchu.kosecondSentence}  </h1>\r\n\r\n                <div>\r\n                    <h1 className='someSpace'>{props.cantFind}</h1>\r\n                    {console.log('NU EXISTA FETCH')}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport { NavBarSearchSentences };\r\n","D:\\git\\LangLearning-Frontend\\src\\pages\\Footer.js",["91","92","93","94"],"import React from 'react';\r\nimport febeu from '../images/facebook.png';\r\nimport insta from '../images/instagram.png';\r\nimport disc from '../images/discord.png';\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <>\r\n            <footer className='bg-dark text-center text-lg-start Footerul'>\r\n                <div className='container p-4'>\r\n                    <div className='row'>\r\n                        <div className='col-lg-6 col-md-12 mb-4 mb-md-0 test'>\r\n                            <h5 className='text-uppercase'>\r\n                                Learning vocabulary{' '}\r\n                            </h5>\r\n\r\n                            <p>\r\n                                Welcome to our site, we hope we will can help\r\n                                you somehow in your learning process, korean\r\n                                it's the most beautifull language and also the\r\n                                most easier asian language. Hope you will have\r\n                                fun during your learning process\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className='col-lg-3 col-md-6 mb-4 mb-md-0'>\r\n                            <h5 className='text-uppercase test2'>Explore</h5>\r\n\r\n                            <ul className='list-unstyled mb-0 test2'>\r\n                                <li>\r\n                                    <a href='Home' className='text-light'>\r\n                                        Home page\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a\r\n                                        href='GiveMeSentences'\r\n                                        className='text-light'>\r\n                                        Random Sentences\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href='SendEmail' className='text-light'>\r\n                                        Send feedback/question\r\n                                    </a>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <a href='#!' className='text-light'>\r\n                                        Basic learners mistakes\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className='socialMediaa col-lg-3 col-md-6 mb-4 mb-md-0'>\r\n                            <h5 className='text-uppercase mb-0'>\r\n                                Social media and community\r\n                            </h5>\r\n\r\n                            <ul className='list-unstyled  socialMedia'>\r\n                                <li>\r\n                                    <a href='' className='text-light inline '>\r\n                                        <img src={febeu} />\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href='#!' className='text-light inline'>\r\n                                        <img src={insta} />\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href='#!' className='text-light inline'>\r\n                                        <img src={disc} />\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FooterPage;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":8,"nodeType":"101","endLine":23,"endColumn":18,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":41,"column":17,"nodeType":"105","endLine":41,"endColumn":21},{"ruleId":"95","replacedBy":"106"},{"ruleId":"97","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":23},{"ruleId":"95","replacedBy":"112"},{"ruleId":"97","replacedBy":"113"},{"ruleId":"108","severity":1,"message":"114","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"108","severity":1,"message":"115","line":6,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"116","line":7,"column":5,"nodeType":"110","messageId":"111","endLine":7,"endColumn":19},{"ruleId":"108","severity":1,"message":"117","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":17},{"ruleId":"108","severity":1,"message":"118","line":9,"column":5,"nodeType":"110","messageId":"111","endLine":9,"endColumn":15},{"ruleId":"108","severity":1,"message":"119","line":10,"column":5,"nodeType":"110","messageId":"111","endLine":10,"endColumn":15},{"ruleId":"108","severity":1,"message":"120","line":11,"column":5,"nodeType":"110","messageId":"111","endLine":11,"endColumn":21},{"ruleId":"108","severity":1,"message":"121","line":12,"column":5,"nodeType":"110","messageId":"111","endLine":12,"endColumn":16},{"ruleId":"108","severity":1,"message":"122","line":16,"column":5,"nodeType":"110","messageId":"111","endLine":16,"endColumn":11},{"ruleId":"108","severity":1,"message":"123","line":19,"column":5,"nodeType":"110","messageId":"111","endLine":19,"endColumn":18},{"ruleId":"108","severity":1,"message":"124","line":22,"column":8,"nodeType":"110","messageId":"111","endLine":22,"endColumn":18},{"ruleId":"108","severity":1,"message":"125","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":22},{"ruleId":"108","severity":1,"message":"126","line":13,"column":8,"nodeType":"110","messageId":"111","endLine":13,"endColumn":21},{"ruleId":"108","severity":1,"message":"127","line":20,"column":10,"nodeType":"110","messageId":"111","endLine":20,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":44,"column":29,"nodeType":"105","endLine":44,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":58,"column":29,"nodeType":"105","endLine":58,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":71,"column":29,"nodeType":"105","endLine":71,"endColumn":33},{"ruleId":"108","severity":1,"message":"128","line":190,"column":12,"nodeType":"110","messageId":"111","endLine":190,"endColumn":26},{"ruleId":"108","severity":1,"message":"129","line":190,"column":28,"nodeType":"110","messageId":"111","endLine":190,"endColumn":45},{"ruleId":"108","severity":1,"message":"130","line":191,"column":12,"nodeType":"110","messageId":"111","endLine":191,"endColumn":25},{"ruleId":"108","severity":1,"message":"131","line":191,"column":27,"nodeType":"110","messageId":"111","endLine":191,"endColumn":43},{"ruleId":"108","severity":1,"message":"132","line":192,"column":12,"nodeType":"110","messageId":"111","endLine":192,"endColumn":16},{"ruleId":"108","severity":1,"message":"133","line":192,"column":18,"nodeType":"110","messageId":"111","endLine":192,"endColumn":25},{"ruleId":"108","severity":1,"message":"134","line":194,"column":14,"nodeType":"110","messageId":"111","endLine":194,"endColumn":22},{"ruleId":"108","severity":1,"message":"135","line":281,"column":12,"nodeType":"110","messageId":"111","endLine":281,"endColumn":22},{"ruleId":"108","severity":1,"message":"136","line":324,"column":11,"nodeType":"110","messageId":"111","endLine":324,"endColumn":19},{"ruleId":"108","severity":1,"message":"137","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":23},{"ruleId":"108","severity":1,"message":"138","line":3,"column":20,"nodeType":"110","messageId":"111","endLine":3,"endColumn":29},{"ruleId":"108","severity":1,"message":"139","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":18},{"ruleId":"108","severity":1,"message":"140","line":14,"column":9,"nodeType":"110","messageId":"111","endLine":14,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":63,"column":37,"nodeType":"105","endLine":63,"endColumn":79},{"ruleId":"143","severity":1,"message":"144","line":64,"column":41,"nodeType":"105","endLine":64,"endColumn":60},{"ruleId":"143","severity":1,"message":"144","line":69,"column":41,"nodeType":"105","endLine":69,"endColumn":60},{"ruleId":"143","severity":1,"message":"144","line":74,"column":41,"nodeType":"105","endLine":74,"endColumn":59},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchu'. Either include it or remove the dependency array.","ArrayExpression",["147"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["145"],["146"],"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar",["145"],["146"],"'koreanLang' is defined but never used.","'MDBNavbar' is defined but never used.","'MDBNavbarBrand' is defined but never used.","'MDBNavbarNav' is defined but never used.","'MDBNavItem' is defined but never used.","'MDBNavLink' is defined but never used.","'MDBNavbarToggler' is defined but never used.","'MDBCollapse' is defined but never used.","'MDBBtn' is defined but never used.","'MDBFormInline' is defined but never used.","'KoreanFlag' is defined but never used.","'NavbarFunction' is defined but never used.","'ReactCardFlip' is defined but never used.","'TEST' is defined but never used.","'isFlippedThird' is assigned a value but never used.","'setisFlippedThird' is assigned a value but never used.","'isFlippedFour' is assigned a value but never used.","'setisFlippedFour' is assigned a value but never used.","'test' is assigned a value but never used.","'setTest' is assigned a value but never used.","'cardFlip' is defined but never used.","'FlipMyCard' is assigned a value but never used.","'SomeTest' is assigned a value but never used.","'SentencesByWord' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [cantFind, fetchu]",{"range":"150","text":"151"},[727,737],"[cantFind, fetchu]"]